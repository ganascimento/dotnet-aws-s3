name: CI/CD Terraform + .NET

on:
  push:
    branches:
      - "**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.203"

      - name: Build .NET API
        run: |
          dotnet restore ./Dotnet.Aws.S3.API
          dotnet build ./Dotnet.Aws.S3.API -c Release

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform

      - name: Extract Terraform outputs
        id: tf_outputs
        run: |
          echo "PUBLIC_IP=$(terraform output -raw ec2_public_ip)" >> $GITHUB_ENV
          echo "PRIVATE_KEY_BASE64=$(terraform output -raw private_key_pem | base64 -w 0)" >> $GITHUB_ENV
        working-directory: ./terraform

      - name: Check .NET version
        run: dotnet --info

      - name: Build and publish .NET API
        run: |
          dotnet restore ./Dotnet.Aws.S3.API
          dotnet publish ./Dotnet.Aws.S3.API -c Release -o ./Dotnet.Aws.S3.API/publish

      - name: Deploy to EC2
        run: |
          echo "$PRIVATE_KEY_BASE64" | base64 --decode > deploy_key.pem
          chmod 600 deploy_key.pem
          scp -i deploy_key.pem -o StrictHostKeyChecking=no -r ./Dotnet.Aws.S3.API/publish/* ubuntu@$PUBLIC_IP:/home/ubuntu/app/
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ubuntu@$PUBLIC_IP "sudo systemctl restart dotnet-api"
